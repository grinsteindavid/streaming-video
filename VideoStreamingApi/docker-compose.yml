version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5000:8080"
      - "5001:443"
      - "5005:5005"  # Debugging port
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_CONNECTION_STRING=Host=postgres;Database=videostreaming;Username=postgres;Password=postgres
      - STORAGE_PATH=/app/videos
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
      # Debugging environment variables
      - ASPNETCORE_Logging__Console__FormatterName=
      - ASPNETCORE_Logging__Console__FormatterOptions__IncludeScopes=true
      - DOTNET_HOSTBUILDER__RELOADCONFIGONCHANGE=false
      # Enable VS Code debugging
      - VSTEST_HOST_DEBUG=1
    volumes:
      # Mount source code for real-time changes
      - .:/src
      # Mount local video storage
      - ./data/videos:/app/videos
    depends_on:
      - postgres
    networks:
      - videostreaming-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "8081:80"  # Changed to 8081 to avoid conflict with API port
    volumes:
      - ./data/videos:/usr/share/nginx/html/videos
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      - videostreaming-network
    restart: always

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=videostreaming
    ports:
      - "5432:5432"
    volumes:
      # Mount local postgres data
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - videostreaming-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  videostreaming-network:
    driver: bridge
